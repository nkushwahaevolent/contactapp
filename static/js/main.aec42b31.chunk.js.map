{"version":3,"sources":["../node_modules/jspdf/dist sync","component/Common/common.js","component/ListContactComponent/index.js","component/ControlsComponent/Input.jsx","component/ControlsComponent/Select.jsx","component/ControlsComponent/Button.jsx","component/ControlsComponent/TableHeader.jsx","component/ControlsComponent/Tbody.jsx","component/ControlsComponent/Table.jsx","component/ShowContactListComponent/index.js","component/ControlsComponent/FormContainer.jsx","component/AddContactComponent/index.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","tableIcons","Add","Remove","Delete","Edit","Check","FirstPage","LastPage","Clear","PreviousPage","NextPage","Search","ViewColumn","SaveAlt","ThirdStateCheck","Filter","ResetSearch","SortArrow","columns","title","field","type","lookup","1","2","columnsMaterial","listData","rows","firstname","lastname","email","phonenumber","status","formErrors","firstnameValid","formValid","disabled","isSave","lastnameValid","emailValid","phonenumberValid","listDataMaterial","statusOptions","validateField","fieldName","value","fieldValidationError","match","length","ListContactComponent","props","state","this","data","icons","editable","onRowAdd","newData","Promise","setTimeout","setState","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","options","actionsColumnIndex","search","headerStyle","backgroundColor","color","rowStyle","Component","Input","className","htmlFor","name","onChange","handleChange","placeholder","Select","selected","map","option","key","label","Button","onClick","action","TableHeader","item","idx","TableBody","handleSave","handleEditSpecificRow","handleRemoveSpecificRow","Table","ShowListContactComponent","componentDidMount","event","validationResult","target","newRows","rownumber","error","forEach","element","index","React","FormContainer","validPropName","validPropValue","newContact","validateForm","handleFormSubmit","preventDefault","updateListData","console","log","onSubmit","ShowContactListComponent","AddContactComponent","App","to","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.aec42b31.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 332;","import Add from \"@material-ui/icons/AddBox\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport ThirdStateCheck from \"@material-ui/icons/Remove\";\r\nimport PreviousPage from \"@material-ui/icons/ChevronLeft\";\r\nimport NextPage from \"@material-ui/icons/ChevronRight\";\r\nimport Filter from \"@material-ui/icons/FilterList\";\r\nimport ResetSearch from \"@material-ui/icons/Clear\";\r\nimport SortArrow from \"@material-ui/icons/ArrowDownward\";\r\n\r\nexport const tableIcons = {\r\n  Add,\r\n  Remove,\r\n  Delete,\r\n  Edit,\r\n  Check,\r\n  FirstPage,\r\n  LastPage,\r\n  Clear,\r\n  PreviousPage,\r\n  NextPage,\r\n  Search,\r\n  ViewColumn,\r\n  SaveAlt,\r\n  ThirdStateCheck,\r\n  Filter,\r\n  ResetSearch,\r\n  SortArrow,\r\n};\r\n\r\nexport const columns = [\r\n  { title: \"First Name\", field: \"firstname\" },\r\n  { title: \"Last Name\", field: \"lastname\" },\r\n  { title: \"Email\", field: \"email\" },\r\n  { title: \"Phone Number\", field: \"phonenumber\", type: \"numeric\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    lookup: { 1: \"Active\", 2: \"Inactive\" },\r\n  },\r\n  { title: \"Edit/Save\", field: \"Edit\", type: \"\" },\r\n  { title: \"Delete\", field: \"Delete\", type: \"\" },\r\n];\r\n\r\nexport const columnsMaterial = [\r\n  { title: \"First Name\", field: \"firstname\" },\r\n  { title: \"Last Name\", field: \"lastname\" },\r\n  { title: \"Email\", field: \"email\" },\r\n  { title: \"Phone Number\", field: \"phonenumber\", type: \"numeric\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    lookup: { 1: \"Active\", 2: \"Inactive\" },\r\n  },\r\n];\r\n\r\nexport const listData = {\r\n  rows: [\r\n    {\r\n      id: 1,\r\n      firstname: \"Neeraj\",\r\n      lastname: \"Kushwaha\",\r\n      email: \"kush.neeraj1993@gmail.com\",\r\n      phonenumber: \"7000271294\",\r\n      status: \"Active\",\r\n      formErrors: \"\",\r\n      firstnameValid: true,\r\n      formValid: true,\r\n      disabled: true,\r\n      isSave: false,\r\n      lastnameValid: true,\r\n      emailValid: true,\r\n      phonenumberValid: true,\r\n    },\r\n  ],\r\n};\r\nexport const listDataMaterial = [];\r\n\r\nexport const statusOptions = [\"Active\", \"Inactive\"];\r\n\r\nexport const validateField = (fieldName, value) => {\r\n  let fieldValidationError = \"\";\r\n  switch (fieldName) {\r\n    case \"firstname\":\r\n      let firstnameValid = value === \"\" ? false : true;\r\n      fieldValidationError = firstnameValid ? true : \"Please enter first name\";\r\n      break;\r\n    case \"lastname\":\r\n      let lastnameValid = value === \"\" ? false : true;\r\n      fieldValidationError = lastnameValid ? true : \"Please enter last name\";\r\n      break;\r\n    case \"email\":\r\n      let emailValid = value.match(\r\n        /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n      );\r\n      fieldValidationError =\r\n        emailValid === null ? \"Please enter valid email\" : true;\r\n      break;\r\n    case \"phonenumber\":\r\n      let phonenumberValid = value.length < 10 || value.length > 10;\r\n      fieldValidationError = phonenumberValid\r\n        ? \"Please enter valid number\"\r\n        : true;\r\n      break;\r\n    case \"status\":\r\n      fieldValidationError = true;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return { fieldValidationError, fieldName };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { columnsMaterial, listDataMaterial,tableIcons } from \"../../component/Common/common.js\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nclass ListContactComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: columnsMaterial,\r\n      listData: listDataMaterial,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <MaterialTable\r\n        title = {'Contact List'}\r\n        columns={this.state.columns}\r\n        data={this.state.listData}\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState((prevState) => {\r\n                const listData = [...prevState.listData];\r\n                listData.push(newData);\r\n                return { ...prevState, listData };\r\n              });\r\n            }, 600);\r\n          }),\r\n          onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                this.setState((prevState) => {\r\n                  const listData = [...prevState.listData];\r\n                  listData[listData.indexOf(oldData)] = newData;\r\n                  return { ...prevState, listData };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n          onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              this.setState((prevState) => {\r\n                const listData = [...prevState.listData];\r\n                listData.splice(listData.indexOf(oldData), 1);\r\n                return { ...prevState, listData };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n        search: false,\r\n        headerStyle: {\r\n          backgroundColor: '#01579b',\r\n          color: '#FFF'\r\n        },\r\n        rowStyle: {\r\n          backgroundColor: '#EEE',\r\n        }\r\n      }}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default ListContactComponent;","import React from 'react';\r\nexport const Input = (props) => {\r\n    return (  \r\n  <div className=\"form-group\">\r\n    <label htmlFor={props.name} className=\"form-label\">{props.title}</label>\r\n    <input\r\n      className={props.className}\r\n      id={props.id}\r\n      name={props.name}\r\n      type={props.type}\r\n      value={props.value}\r\n      onChange={props.handleChange}\r\n      placeholder={props.placeholder}\r\n      disabled={props.disabled} \r\n    />\r\n  </div>\r\n)\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nconst Select = (props) => {\r\n    return(\r\n        <div className=\"form-group\">\r\n            <label htmlFor={props.name}> {props.title} </label>\r\n            <select\r\n              value={props.selected}\r\n              name={props.name}\r\n              onChange={props.handleChange}\r\n              disabled={props.disabled}\r\n              id={props.id}\r\n              >\r\n              \r\n              {props.options.map(option => {\r\n                return (\r\n                  <option \r\n                    key={option}\r\n                    value={option}\r\n                    label={option}>{option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n      </div>)\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\nconst Button = (props) => {\r\n    return(\r\n        <button \r\n            className={props.className}\r\n            onClick= {props.action} disabled={props.disabled}>    \r\n            {props.title} \r\n        </button>)\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport {columns} from \"../Common/common\";\r\nconst TableHeader = () => {\r\n    \r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {columns.map((item, idx) => (\r\n                    <th className=\"text-center\" key={idx}> {item.title} </th>\r\n                ))}\r\n            </tr>\r\n        </thead>)\r\n}\r\n\r\nexport default TableHeader;","import React from 'react';\r\nimport Input from '../ControlsComponent/Input';\r\nimport Select from '../ControlsComponent/Select';\r\nimport Button from '../ControlsComponent/Button';\r\nimport { statusOptions } from \"../Common/common\"\r\nconst TableBody = (props) => {\r\n    return (\r\n        <tbody>\r\n            {props.rows.map((item, idx) => (\r\n\r\n                <tr id={item.id} key={item.id}>\r\n                    <td>\r\n                        <Input type={'text'} name={'firstname'} id={item.id + item.firstname} value={item.firstname} handleChange={(e)=>props.handleChange(idx,e)}\r\n                            className={'form-control'} disabled={item.disabled} />\r\n                    </td>\r\n                    <td>\r\n                        <Input type={'text'} name={'lastname'} id={item.id + item.lastname} value={item.lastname} handleChange={(e)=>props.handleChange(idx,e)}\r\n                            className={'form-control'} disabled={item.disabled} />\r\n                    </td>\r\n                    <td>\r\n                        <Input type={'email'} name={'email'} id={item.id + item.email} value={item.email} handleChange={(e)=>props.handleChange(idx,e)}\r\n                            className={'form-control'} disabled={item.disabled} />\r\n                    </td>\r\n                    <td>\r\n                        <Input type={'number'} name={'phonenumber'} id={item.id + item.phonenumber} value={item.phonenumber} handleChange={(e)=>props.handleChange(idx,e)}\r\n                            className={'form-control'} disabled={item.disabled} />\r\n                    </td>\r\n                    <td>\r\n                        <Select title={''}\r\n                            selected={item.status}\r\n                            name={'status'}\r\n                            options={statusOptions}\r\n                            id={item.id + item.status}\r\n                            placeholder={''}\r\n                            handleChange={(e)=>props.handleChange(idx,e)} disabled={item.disabled} />\r\n                    </td>\r\n\r\n                    {item.isSave ?\r\n                        <td>\r\n                            <Button className={'button-tbl'} disabled={false} action={props.handleSave(idx)} title={<i className=\"fa fa-save fa-lg\" />} >\r\n                            </Button>\r\n                        </td> :\r\n                        <td>\r\n                            <Button className={'button-tbl'} disabled={false} action={props.handleEditSpecificRow(idx)} title={<i className=\"fa fa-edit fa-lg\" />} >\r\n                            </Button>\r\n\r\n                        </td>}\r\n                    <td>\r\n                        <Button className={'button-tbl'} disabled={false} action={props.handleRemoveSpecificRow(idx)} title={<i className=\"fa fa-trash fa-lg\" />} >\r\n                        </Button>\r\n                    </td>\r\n\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableBody from \"./Tbody\";\r\nexport const Table = (props) => {\r\n    return (\r\n        <div className=\"row clearfix\">\r\n            <div className=\"col-md-12 column\">\r\n                <table className={props.className}\r\n                    id={props.id} >\r\n                    <TableHeader />\r\n                    <TableBody rows={props.rows} handleChange={props.handleChange}\r\n                     handleRemoveSpecificRow={props.handleRemoveSpecificRow}\r\n                     handleEditSpecificRow={props.handleEditSpecificRow}\r\n                     handleSave={props.handleSave} \r\n                    />\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\nimport Table from \"../ControlsComponent/Table\";\r\nimport { validateField } from \"../Common/common\";\r\n\r\nclass ShowListContactComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: [],\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      rows: this.props.listData.rows,\r\n    });\r\n  };\r\n\r\n  handleChange = (idx, event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    let validationResult = {};\r\n    validationResult = validateField(name, value);\r\n    const newRows = this.state.rows;\r\n    let isSave;\r\n    let rownumber=idx + 1;\r\n    let fieldValidationError = validationResult.fieldValidationError;\r\n    fieldValidationError=name===\"status\" ? newRows[idx].formErrors :fieldValidationError\r\n    if (fieldValidationError === true) {\r\n      isSave = true;\r\n    } else {\r\n      fieldValidationError = name===\"status\"? fieldValidationError : fieldValidationError + \" at row:\" + rownumber;\r\n      isSave = false;\r\n    }\r\n    if(newRows[idx].formErrors===\"\" && name===\"status\"){\r\n      isSave = true;\r\n    }\r\n    newRows[idx] = {\r\n      ...newRows[idx],\r\n      [name]: value,\r\n      isSave,\r\n      formErrors:fieldValidationError\r\n    };\r\n\r\n    this.setState({\r\n      rows: newRows,\r\n      error: fieldValidationError,\r\n    });\r\n  };\r\n\r\n  handleEditSpecificRow = (idx) => () => {\r\n    let rows = this.props.listData.rows;\r\n    rows.forEach((element, index) => {\r\n      if (index === idx) {\r\n        element.disabled = false;\r\n        element.isSave = element.formErrors===true?true:false\r\n      }\r\n    });\r\n\r\n    this.setState({ rows });\r\n  };\r\n\r\n  handleRemoveSpecificRow = (idx) => () => {\r\n    const rows = this.state.rows;\r\n    const error=\"\";\r\n    rows.splice(idx, 1);\r\n    this.setState({ rows,error });\r\n  };\r\n\r\n  handleSave = (idx) => () => {\r\n    const rows = this.state.rows;\r\n    rows.forEach((element, index) => {\r\n      if (index === idx) {\r\n        element.disabled = true;\r\n        element.isSave = element.formErrors===true||element.formErrors===\"\" ?false:true\r\n      }\r\n    });\r\n\r\n    this.setState({ rows });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          {this.state.error === true ? (\r\n            \"\"\r\n          ) : (\r\n            <div className=\"error\">{this.state.error}</div>\r\n          )}\r\n          {this.state.rows.length>0?\r\n          <Table\r\n            id={\"tab_contact\"}\r\n            className={\"table table-bordered table-hover\"}\r\n            rows={this.state.rows}\r\n            handleChange={this.handleChange}\r\n            handleRemoveSpecificRow={this.handleRemoveSpecificRow}\r\n            handleEditSpecificRow={this.handleEditSpecificRow}\r\n            handleSave={this.handleSave}\r\n          />:\"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowListContactComponent;\r\n","import React, { Component } from 'react';\r\nimport Input from '../ControlsComponent/Input';\r\nimport Select from '../ControlsComponent/Select';\r\nimport Button from './Button';\r\nimport { statusOptions, validateField, listData } from \"../Common/common\";\r\nimport ShowContactListComponent from \"../ShowContactListComponent\";\r\n\r\nclass FormContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newContact: {\r\n                id: 1,\r\n                firstname: '',\r\n                lastname: '',\r\n                email: '',\r\n                phonenumber: '',\r\n                status: 'Active',\r\n                formErrors: '',\r\n                firstnameValid: false,\r\n                formValid: false,\r\n                disabled: true,\r\n                isSave: false,\r\n            },\r\n            statusOptions: statusOptions,\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let value = event.target.value\r\n        let name = event.target.name\r\n        let validationResult = {};\r\n        validationResult = validateField(name, value);\r\n        const { fieldValidationError, fieldName } = validationResult\r\n        let validPropName, validPropValue;\r\n        const formErrors = fieldValidationError !== true ? fieldValidationError : ''\r\n        switch (fieldName) {\r\n            case 'firstname':\r\n                validPropName = \"firstnameValid\";\r\n                validPropValue = fieldValidationError ? fieldValidationError : false\r\n                break;\r\n            case 'lastname':\r\n                validPropName = \"lastnameValid\";\r\n                validPropValue = fieldValidationError ? fieldValidationError : false\r\n                break;\r\n            case 'email':\r\n                validPropName = \"emailValid\";\r\n                validPropValue = fieldValidationError ? fieldValidationError : false\r\n                break;\r\n            case 'phonenumber':\r\n                validPropName = \"phonenumberValid\";\r\n                validPropValue = fieldValidationError ? fieldValidationError : false\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            newContact: {\r\n                ...prevState.newContact,\r\n                [name]: value,\r\n                formErrors,\r\n                [validPropName]: validPropValue,\r\n            }\r\n        }), () => { this.validateForm() })\r\n    }\r\n\r\n    validateForm = () => {\r\n        const formValid = this.state.newContact.firstnameValid === true && this.state.newContact.lastnameValid === true &&\r\n            this.state.newContact.emailValid === true && this.state.newContact.phonenumberValid === true ? true : false;\r\n\r\n        this.setState(prevState => ({\r\n            newContact: {\r\n                ...prevState.newContact,\r\n                formValid\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        let id = listData.rows.length + 1;\r\n        this.setState(prevState => ({\r\n            newContact: {\r\n                ...prevState.newContact,\r\n                id: id\r\n            }\r\n        }), () => { this.updateListData() });\r\n        console.log(listData)\r\n    }\r\n\r\n    updateListData = () => {\r\n        listData.rows.push(this.state.newContact)\r\n        this.setState({\r\n            newContact: {\r\n                id: 1,\r\n                firstname: '',\r\n                lastname: '',\r\n                email: '',\r\n                phonenumber: '',\r\n                status: 'Active',\r\n                formErrors: '',\r\n                firstnameValid: false,\r\n                formValid: false,\r\n                disabled: true,\r\n                isSave: false,\r\n            },\r\n            statusOptions: statusOptions,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"container\" onSubmit={this.handleFormSubmit}>\r\n                    <Input type={'text'}\r\n                        title={'First Name'}\r\n                        id={this.state.newContact.id + \"firstname\"}\r\n                        name={'firstname'}\r\n                        value={this.state.newContact.firstname}\r\n                        placeholder={'Enter your first name'}\r\n                        handleChange={this.handleChange}\r\n                        className={'form-input'}\r\n                        disabled={false} />\r\n                    <Input type={'text'}\r\n                        title={'Last Name'}\r\n                        id={this.state.newContact.id + \"lastname\"}\r\n                        name={'lastname'}\r\n                        value={this.state.newContact.lastname}\r\n                        placeholder={'Enter your last name'}\r\n                        handleChange={this.handleChange}\r\n                        className={'form-input'}\r\n                        disabled={false} />\r\n                    <Input type={'email'}\r\n                        title={'Email'}\r\n                        name={'email'}\r\n                        id={this.state.newContact.id + \"email\"}\r\n                        value={this.state.newContact.email}\r\n                        placeholder={'Enter your email'}\r\n                        handleChange={this.handleChange}\r\n                        className={'form-input'}\r\n                        disabled={false} />\r\n                    <Input type={'number'}\r\n                        title={'Phone Number'}\r\n                        name={'phonenumber'}\r\n                        id={this.state.newContact.id + \"phonenumber\"}\r\n                        value={this.state.newContact.phonenumber}\r\n                        placeholder={'Enter your phone number'}\r\n                        handleChange={this.handleChange}\r\n                        className={'form-input'}\r\n                        disabled={false} />\r\n                    <Select title={'Status'}\r\n                        name={'status'}\r\n                        id={this.state.newContact.id + \"status\"}\r\n                        options={this.state.statusOptions}\r\n                        value={this.state.newContact.status}\r\n                        handleChange={this.handleChange}\r\n                        disabled={false} selected={this.state.newContact.status} />\r\n                    <div className=\"error\">\r\n                        {this.state.newContact.formErrors}\r\n                    </div>\r\n                    <Button className={'button'} disabled={!this.state.newContact.formValid} action={this.handleFormSubmit} title={'Add Contact'} />\r\n                </form>\r\n                {listData.rows.length > 0 ?\r\n                    <div className=\"ShowContact\">\r\n                        <h3>Contact List</h3>\r\n                        <ShowContactListComponent listData={listData} />\r\n                    </div>\r\n                    : null}\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport FormContainer from \"../ControlsComponent/FormContainer\";\r\n\r\nclass AddContactComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"AddContact\">\r\n        <h3>Add Contact</h3>\r\n        <FormContainer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddContactComponent;\r\n","import React from 'react';\nimport './App.css';\nimport ListContactComponent from './component/ListContactComponent';\nimport AddContactComponent from './component/AddContactComponent';\nimport { Route, Switch, Link, BrowserRouter as Router } from 'react-router-dom'\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Router >\n       <ul> \n       <li> \n        <Link className='text-link' to=\"/contactlist\">Home</Link> \n      </li> \n      <li> \n        <Link className='text-link' to=\"/Tablelist\">Material UI</Link> \n      </li> \n    </ul> \n      <Switch>\n          <Route exact path=\"/contactlist\">\n            <AddContactComponent />\n          </Route>\n          <Route exact path=\"/Tablelist\" component={ListContactComponent} />\n        </Switch>\n       \n        </Router>\n       \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}